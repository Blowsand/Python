#!/usr/bin/python 
#-*- coding:utf-8 -*-

#导入所需模块
#导入进程模块
import subprocess
import urllib2
import urllib
#socket针对进程见通信
import socket
import types
import time
import os
import re

#定义模拟登陆
class Login:
    #初始化变量
    def __init__(self):
        #定义用户名
        self.username = "xxxx"
        #密码
        self.password = "xxxx"
        #无线网络IP网段
        self.ip_pre = '211.87'
        #登陆时长
        self.overtime = 720
        #检测间隔时间，单位s
        self.every = 10
    
    #模拟登陆
    def login(self):
        print (self.getCurrenttime(), u"正在尝试认证QLSC_SLC无线网络")
        #获取包含无线IP地址
        ip = self.getIP()
        data = {
            "username": self.username,
            "password": self.password,
            "serverType": "",
            "isSavePass": "on",
            "Submit1": "",
            "Language": "Chinese",
            "ClientIP": self.getIP(),
            "timeoutvalue": 45,
            "heartbeat": 240,
            "fastwebornot": False,
            "StartTime": self.getNowTime()
            "shkOvertime": self.overtime,
            "strOSName": "",
            "iAdptIndex": "",
            "strAdptName": "",
            "strAdptStdName": "",
            "strFileEncoding": "",
            "PhyAddr": "",
            "bDHCPEnable": "",
            "strIPAddrArray": ""
            "strMaskArray": "",
            "strMask": "",
            "iDHCPDelayTIme": "",
            "iDHCPTryTimes": "",
            "strOldPrivateIP": self.getIP(),
            "strOldPublicIP": self.getIP(),
            "strPrivateIP": self.getIP(),
            "PublicIP": self.getIP(),
            "iIPCONFIG": 0,
            "sHttpPrefix": "http://192.168.10",
            "title": "CAMS Portal" 
        }
        heasers = {
            'User-Aget': 'Mozilla/5.0 (Windows NT 6.6; WOW64) AppleWebKit/5678.30',
            'Host': '192.168.8.10',
            'Origin': 'http://192.168.8.10'
            'Referer': 'http://192.168.8.10/portal/index_default.jsp?Language=Chinese'
        }
        
        post_data = urllib.urlencode(data)
        login_url = 'http://192.168.8.10/portal/ligon.jsp?Flag=0'
        request = urllib2.Request(login_url, post_data, headers)
        response = urllib2.urlopen(requset)
        result = response.read().decode('gbk')
        self.getLoginResult(result)
        
    def getLoginResult(self, result):
        if u"用户上线成功" in result:
            print (self.getCurrentTime(), u"用户在线成功，在线时长为", self.overtime/60, "分钟")
        elif u"您已建立连接" in result:
            print (self.getCurrentTime(), u"您已建立连接，无需重复登陆")
        elif u"用户不存在" in result:
            print (self.getCurrentTime(), u"用户不存在，请检查账号是否正确")
        elif u"用户密码错误" in result:
            pattern = re.compile('<td class="tWhite".*?2553:(.*?)</b>.*?</td>', re.S)
            res = re.search(pattern, result)
            if res:
                print (self.getCurrentTime(), res.group(1), u"请重新修改密码")
        else:
            print (self.getCurrentTime(), u"未知错误，请检查学号密码是否正确")

    def getNowTime(self):
        return str(int(time.time())) + '000'
        
        
    def getIP(self):
        #gethostbyname用域名或主机名获取IP地址，gethostname本地主机的标准主机名
        #获取本地IP
        local_ip = socket.gethostbyname(socket.gethostname())
        #如果获取网段包含无线网络IP
        if self.ip_pre in str(local_ip):
            #返回包含无线网络IP
            return str(local_ip)
        #gethostbyname_ex 能得到原先的域名，和域名列表，以及地址列表
        ip_lists = socket.gethostbyname_ex(socket.gethostname())
        
        #
        for ip_list in ip_lists:
            #判断ip_list是否是列表类型
            if isinstance(ip_list, list):
                #返回包含无线网络ip的列表
                for i in ip_list:
                    if self.ip_pre in str(i):
                        return str(i)
            #将包含无线网络ip的地址强制以列表返回
            elif type(ip_list) is types.StringType:
                if self.ip_pre in ip_list:
                    return ip_list
                
                
        def canConnect(self):
            fnull = open(os.devnull, 'w')
            result = subprocess.call('ping www.baidu.com', shell = True, stdout = fnull, stderr = fnull)
            fnull.close()
            if result:
                return False
            else:
                return True
            
            
        def getCurrentTime(self):
            return time.strftime('[%Y-%m-%d %H-%M-%S]', time.localtime(time.time()))
        
        
        def main(self):
            print (self.getCurrentTime(), u"您好，欢迎使用模拟登陆系统"
            while True:
                nowIP = self.getIP()
                if not nowIP:
                    print (self.getCurrentTime(), u"请检查是否连接QLSC_STC无线网络")
                else:
                    print (self.getCurrentTime(), u"成功连接了QLSC_STC网络， 本机IP为"， nowIP)
                    self.login()
                    while True:
                        can_connect = self.canConnect()
                        if not can_connect:
                            nowIP = self.getIP()
                            if not nowIP:
                                print (self.getCurrentTime(), u"当前已掉线，请确保连接上了QLSC_STC网络")
                            else:
                                print (self.getCurrentTime(), u"当前已经掉线，正在尝试重新连接")
                                self.login()
                            time.sleep(self.every)
                   
 login = login()
 login.main()
        
