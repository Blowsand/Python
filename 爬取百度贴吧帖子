#！/usr/bin/env python
#-*-coding:utf:8-*-

import urllib2
import re
import Tool

class BDTB:
    def __init(self, baseURL, seeLZ, floorTag):
        self.baseURL = baseURL
        self.seeLZ = "?see_lz=" + str(seeLZ)
        self.tool = Tool()
        self.file = None
        self.floor = 1
        self.defaultTitle = u"百度贴吧"
        self.floorTag = floorTag
        
    def getPage(self, pageNum):
        try:
            url = self.baseURL + self.seeLZ + "&pn=" + str(pageNum)
            request = urllib2.Request(url)
            response = urllib2.urlopen(request)
            return response.read().decode('utf-8')
        except urllib2.URLError, e:
            if hasattr(e, "reason"):
                print (u"连接贴吧失败，失败原因：", e.reason)
                return None
                
     def getTitle(self, page):
         pattern = re.compile('<h1 class="core_title_txt.*?>(.*?)</h1>', re.S)
         result = re.search(pattern, page)
         if result:
             reutrn result.sroup(1).strip()
         else:
             return None
             
     def getPageNum(self, page):
         pattern = re.compile('<li class="l_reply_num.*?</span>.*?<span.*?>(.*?)</span>'.re.S)
         result = re.search(pattern, page)
         if result:
             return result.group(1).strip()
         else:
             return None
             
     def getContent(self, page):
         pattern = re.compile('<div id=post_content_.*?>(.*?)</div>', re.S)
         items = re.findall(pattern, page)
         contents = []
         for item in items:
         content = "\n" + self.tool.rapalce(item) + "\n"
         contents.append(content.enconde("utf-8"))
         return contents
         
     def setFileTitle(self, title):
         if title is not None:
             self.file = open(title + ".txt", "w+")
         else:
             self.file = open(self.defaultTitle + ".txt" + "w+")
             
             
     def writeData(self, contents):
         for item in contents:
             if self.floorTag == "1":
                 floorLine = "\n" + str(self.floor) + u"-----------------"
                 self.file.write(floorLine)
             self.file.write(item)
             self.floor += 1
             
     def start(self):
         indexPage = slef.getPage(1)
         pageNum = self.getPageNum(indexPage)
         title = self.getTitle(indexPage)
         self.setFileTitle(title)
         if pageNum == Nonoe:
             print (u"URL以失效，请重试")
             return
         try:
             print ("该帖子共有" + str(pageNum) + "页"
             for i in range(1, int(pageNum)+1):
                 print ("正在写入第" + str(i) + "页数据")
                 page = self.getPage(i)
                 contents = self.getContent(page)
                 self.writeData(contents)
         except IOError, e:
             print ("写入异常, 原因" + e.massage)
         finally:
             print ("写入任务完成！")
             
print (u"请输入帖子代号：")
baseURL = "http://tieba.baidu.com/p" + str(input(u"http://tieba.baidu.com/p/"))
seeLZ = input("是否只获取楼主信息，是输入1，否输入0\n")
floorTag = input("是否写入楼层数据，是输入1，否输入0\n")
bdtb = BDTB(baseURL, seeLZ, floorTag)
bdtb.start()
         
                
            

